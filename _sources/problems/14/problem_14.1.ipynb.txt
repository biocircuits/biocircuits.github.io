{"cells": [{"cell_type": "markdown", "metadata": {}, "source": ["# Problem 14.1: A tri-stable cell-fate determinant circuit\n", "\n", "<hr>"]}, {"cell_type": "markdown", "metadata": {}, "source": ["Common myeloid precursor (CMP) cells are stem cells that can either differentiate into an erythroid (red blood cell) cell or a myeloid (bone marrow) cell. Such a binary differentiation may be regulated by a genetic circuit akin to the toggle circuits we have already encountered. However, the progenitor state of the CMP cells is also stable, which suggests tristability of the underlying circuit. In particular, the transcription factors GATA1 (which we will call X for convenience) and PU.1 (which we will call Y) are mutually repressive, which gives them the toggle-like behavior. They also are autoactivating. These interactions are summarized in the circuit below.\n", "\n", "<div style=\"margin: auto; width: 200px\">\n", "\n", "![tristable toggle](tristable_toggle.png)\n", "    \n", "</div>\n", "\n", "\n", "[Huang and coworkers (_Dev. Biol._, 2007)](https://doi.org/10.1016/j.ydbio.2007.02.036) claimed that this circuit can give tristability. Your task is to assess that claim. Model the circuit where the repression of X by Y and X's autoactivation exhibits OR logic as does repression of Y by X and Y's autoactivation. Can you come up with parameter values that show tristability? *Hint:* Think about how many fixed points are necessary to get tristability.\n", "\n", "To verify the tristability, you can do a graphical analysis using nullclines. Alternatively, if you find parameter values that give enough fixed points for tristability, you can numerically perform a linear stability analysis for each fixed point.\n", "\n", "*Here is another useful hint:* It may be a bit tricky to plot the nullclines because they may be discontinuous and not defined on some intervals. Make sure you plot plenty of values of $x$ and $y$ so that you can catch all of the crossings of nullclines."]}, {"cell_type": "markdown", "metadata": {}, "source": ["<br />"]}], "metadata": {"anaconda-cloud": {}, "kernelspec": {"display_name": "Python 3 (ipykernel)", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.10.10"}}, "nbformat": 4, "nbformat_minor": 4}